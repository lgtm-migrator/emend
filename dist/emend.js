!function(t,e){"use strict";t[e]=function(){"use strict";const o=e=>{const i=t=>t.split("").map(t=>t.charCodeAt(0));const r=t=>("0"+Number(t).toString(16)).substr(-2);const n=t=>i(e).reduce((t,e)=>t^e,t);return t=>t.split("").map(i).map(n).map(r).join("")},s=e=>{const i=t=>t.split("").map(t=>t.charCodeAt(0));const r=t=>i(e).reduce((t,e)=>t^e,t);return t=>String(t).match(/.{1,2}/g).map(t=>parseInt(t,16)).map(r).map(t=>String.fromCharCode(t)).join("")};class t{constructor(){this._version="1.0.0";this.__self=this;this.init=t=>{this.cipher=o(t);this.decipher=s(t);var e=document.querySelectorAll("a");for(var i=0;i<e.length;i++){var r=e[i];var n=r.getAttribute("href");if(n.indexOf("mailto")!==0);if(n.indexOf("mailto:@")===0){r.setAttribute("data-emended-mailto",n.replace("mailto:@",""));r.href="#"}else this.protect(r);r.addEventListener("click",t=>{t.preventDefault();var e=t.target;this.__self.sendMail(e)})}};this.encode=t=>{t=t.replace("mailto:","");return this.cipher(t)};this.decode=t=>{return this.decipher(t)};this.protect=t=>{var e=t.getAttribute("href");e=e.replace("mailto:","");t.setAttribute("data-emended-mailto",this.encode(e));t.setAttribute("href","#")};this.sendMail=e=>{if(e.hasAttribute("data-emended-mailto")){let t="mailto:"+this.decode(e.getAttribute("data-emended-mailto"));var i=document.createElement("a");i.style.visibility="hidden";i.style.position="absolute";i.href=t;document.body.appendChild(i);i.click();document.body.removeChild(i)}}}}const e=new t;return e}(),"function"==typeof define&&define.amd?define(function(){return t[e]}):"object"==typeof exports&&(module.exports=t[e])}("object"==typeof window&&window||this,"emend");
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1lbmQuanMiLCJzb3VyY2VzIjpbImVtZW5kLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBkZWZpbmUsIG1vZHVsZSwgZG9jdW1lbnQgKi9cblxuOyAoZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnksIG5hbWUpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICByb290W25hbWVdID0gZmFjdG9yeSgpO1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJvb3RbbmFtZV07IH0pO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcm9vdFtuYW1lXTtcbiAgfVxufSkoKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnICYmIHdpbmRvdykgfHwgdGhpcywgZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgY29uc3QgY2lwaGVyID0gc2FsdCA9PiB7XG4gICAgY29uc3Qgc3RyMmNociA9IHRleHQgPT4gdGV4dC5zcGxpdCgnJykubWFwKGMgPT4gYy5jaGFyQ29kZUF0KDApKTtcbiAgICBjb25zdCBieXRlSGV4ID0gbiA9PiAoXCIwXCIgKyBOdW1iZXIobikudG9TdHJpbmcoMTYpKS5zdWJzdHIoLTIpO1xuICAgIGNvbnN0IGFwcGx5U2FsdCA9IGNvZGUgPT4gc3RyMmNocihzYWx0KS5yZWR1Y2UoKGEsIGIpID0+IGEgXiBiLCBjb2RlKTtcblxuICAgIHJldHVybiB0ZXh0ID0+IHRleHQuc3BsaXQoJycpXG4gICAgICAubWFwKHN0cjJjaHIpXG4gICAgICAubWFwKGFwcGx5U2FsdClcbiAgICAgIC5tYXAoYnl0ZUhleClcbiAgICAgIC5qb2luKCcnKTtcbiAgfTtcblxuICBjb25zdCBkZWNpcGhlciA9IHNhbHQgPT4ge1xuICAgIGNvbnN0IHN0cjJjaHIgPSByYXdWYWwgPT4gcmF3VmFsLnNwbGl0KCcnKS5tYXAoYyA9PiBjLmNoYXJDb2RlQXQoMCkpO1xuICAgIGNvbnN0IGFwcGx5U2FsdCA9IGNvZGUgPT4gc3RyMmNocihzYWx0KS5yZWR1Y2UoKGEsIGIpID0+IGEgXiBiLCBjb2RlKTtcblxuICAgIHJldHVybiB0ZXh0ID0+IFN0cmluZyh0ZXh0KS5tYXRjaCgvLnsxLDJ9L2cpXG4gICAgICAubWFwKGhleCA9PiBwYXJzZUludChoZXgsIDE2KSlcbiAgICAgIC5tYXAoYXBwbHlTYWx0KVxuICAgICAgLm1hcChjaGFyQ29kZSA9PiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNoYXJDb2RlKSlcbiAgICAgIC5qb2luKCcnKTtcbiAgfTtcblxuICBjbGFzcyBFbWVuZCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLl92ZXJzaW9uID0gJzEuMC4wJztcbiAgICAgIHRoaXMuX19zZWxmID0gdGhpcztcblxuICAgICAgdGhpcy5pbml0ID0gKHNhbHQpID0+IHtcbiAgICAgICAgdGhpcy5jaXBoZXIgPSBjaXBoZXIoc2FsdCk7XG4gICAgICAgIHRoaXMuZGVjaXBoZXIgPSBkZWNpcGhlcihzYWx0KTtcblxuICAgICAgICB2YXIgYW5jaG9ycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2EnKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbmNob3JzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdmFyIGFuY2hvciA9IGFuY2hvcnNbaV07XG4gICAgICAgICAgdmFyIGhyZWYgPSBhbmNob3IuZ2V0QXR0cmlidXRlKCdocmVmJyk7XG4gICAgICAgICAgaWYgKGhyZWYuaW5kZXhPZignbWFpbHRvJykgIT09IDApIHtcbiAgICAgICAgICAgIDsgLy8gZG8gbm90aGluZ1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaHJlZi5pbmRleE9mKCdtYWlsdG86QCcpID09PSAwKSB7XG4gICAgICAgICAgICBhbmNob3Iuc2V0QXR0cmlidXRlKCdkYXRhLWVtZW5kZWQtbWFpbHRvJywgaHJlZi5yZXBsYWNlKCdtYWlsdG86QCcsICcnKSk7XG4gICAgICAgICAgICBhbmNob3IuaHJlZiA9ICcjJztcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByb3RlY3QoYW5jaG9yKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYW5jaG9yLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICAgICAgICAgIHRoaXMuX19zZWxmLnNlbmRNYWlsKHRhcmdldCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHRoaXMuZW5jb2RlID0gKHZhbHVlVG9FbmNyeXB0KSA9PiB7XG4gICAgICAgIHZhbHVlVG9FbmNyeXB0ID0gdmFsdWVUb0VuY3J5cHQucmVwbGFjZSgnbWFpbHRvOicsICcnKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2lwaGVyKHZhbHVlVG9FbmNyeXB0KTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuZGVjb2RlID0gKGVuY29kZWRWYWx1ZSkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWNpcGhlcihlbmNvZGVkVmFsdWUpO1xuICAgICAgfTtcblxuICAgICAgdGhpcy5wcm90ZWN0ID0gKGVsZW1lbnQpID0+IHtcbiAgICAgICAgdmFyIHZhbCA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdocmVmJyk7XG4gICAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKCdtYWlsdG86JywgJycpOyAvLyBzdHJpcCBhbnkgbWlzcGxhY2VkIG1haWx0byByZWZlcmVuY2VzXG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWVtZW5kZWQtbWFpbHRvJywgdGhpcy5lbmNvZGUodmFsKSk7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdocmVmJywgJyMnKTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuc2VuZE1haWwgPSAoZWxlbWVudCkgPT4ge1xuICAgICAgICBpZiAoZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2RhdGEtZW1lbmRlZC1tYWlsdG8nKSkge1xuICAgICAgICAgIGxldCBtYWlsdG8gPSAnbWFpbHRvOicgKyB0aGlzLmRlY29kZShlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1lbWVuZGVkLW1haWx0bycpKTtcblxuICAgICAgICAgIC8vY3JlYXRlIGEgdGVtcG9yYXJ5IGRvbSBlbGVtZW50IGFuZCBzaW11bGF0ZSBhIGNsaWNrIHRvIGxhdW5jaCB0aGUgbWFpbHRvIGxpbmtcbiAgICAgICAgICB2YXIgZG9tID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgICAgIGRvbS5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG4gICAgICAgICAgZG9tLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAgICAgICBkb20uaHJlZiA9IG1haWx0bztcbiAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRvbSk7XG4gICAgICAgICAgZG9tLmNsaWNrKCk7XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkb20pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuICBjb25zdCBlbWVuZCA9IG5ldyBFbWVuZCgpO1xuICByZXR1cm4gZW1lbmQ7XG59LCAnZW1lbmQnKTtcbiJdLCJuYW1lcyI6WyJyb290IiwibmFtZSIsImNpcGhlciIsInNhbHQiLCJzdHIyY2hyIiwidGV4dCIsInNwbGl0IiwibWFwIiwiYyIsImNoYXJDb2RlQXQiLCJieXRlSGV4IiwibiIsIk51bWJlciIsInRvU3RyaW5nIiwic3Vic3RyIiwiYXBwbHlTYWx0IiwiY29kZSIsInJlZHVjZSIsImEiLCJiIiwiam9pbiIsImRlY2lwaGVyIiwicmF3VmFsIiwiU3RyaW5nIiwibWF0Y2giLCJoZXgiLCJwYXJzZUludCIsImNoYXJDb2RlIiwiZnJvbUNoYXJDb2RlIiwiRW1lbmQiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJfdmVyc2lvbiIsIl9fc2VsZiIsImluaXQiLCJhbmNob3JzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaSIsImxlbmd0aCIsImFuY2hvciIsImhyZWYiLCJnZXRBdHRyaWJ1dGUiLCJpbmRleE9mIiwic2V0QXR0cmlidXRlIiwicmVwbGFjZSIsInByb3RlY3QiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwidGFyZ2V0Iiwic2VuZE1haWwiLCJlbmNvZGUiLCJ2YWx1ZVRvRW5jcnlwdCIsImRlY29kZSIsImVuY29kZWRWYWx1ZSIsInZhbCIsImVsZW1lbnQiLCJoYXNBdHRyaWJ1dGUiLCJtYWlsdG8iLCJkb20iLCJjcmVhdGVFbGVtZW50Iiwic3R5bGUiLCJ2aXNpYmlsaXR5IiwicG9zaXRpb24iLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjbGljayIsInJlbW92ZUNoaWxkIiwiZW1lbmQiLCJmYWN0b3J5IiwiZGVmaW5lIiwiYW1kIiwiZXhwb3J0cyIsIm1vZHVsZSIsIndpbmRvdyJdLCJtYXBwaW5ncyI6IkNBRUUsU0FBV0EsRUFBZUMsZ0JBRTFCRCxFQUFLQyxHQU00Qyx3QkFHakQsTUFBTUMsRUFBU0MsSUFDYixNQUFNQyxFQUFVQyxHQUFRQSxFQUFLQyxNQUFNLElBQUlDLElBQUlDLEdBQUtBLEVBQUVDLFdBQVcsSUFDN0QsTUFBTUMsRUFBVUMsSUFBTSxJQUFNQyxPQUFPRCxHQUFHRSxTQUFTLEtBQUtDLFFBQVEsR0FDNUQsTUFBTUMsRUFBWUMsR0FBUVosRUFBUUQsR0FBTWMsT0FBTyxDQUFDQyxFQUFHQyxJQUFNRCxFQUFJQyxFQUFHSCxHQUVoRSxPQUFPWCxHQUFRQSxFQUFLQyxNQUFNLElBQ3ZCQyxJQUFJSCxHQUNKRyxJQUFJUSxHQUNKUixJQUFJRyxHQUNKVSxLQUFLLEtBR0pDLEVBQVdsQixJQUNmLE1BQU1DLEVBQVVrQixHQUFVQSxFQUFPaEIsTUFBTSxJQUFJQyxJQUFJQyxHQUFLQSxFQUFFQyxXQUFXLElBQ2pFLE1BQU1NLEVBQVlDLEdBQVFaLEVBQVFELEdBQU1jLE9BQU8sQ0FBQ0MsRUFBR0MsSUFBTUQsRUFBSUMsRUFBR0gsR0FFaEUsT0FBT1gsR0FBUWtCLE9BQU9sQixHQUFNbUIsTUFBTSxXQUMvQmpCLElBQUlrQixHQUFPQyxTQUFTRCxFQUFLLEtBQ3pCbEIsSUFBSVEsR0FDSlIsSUFBSW9CLEdBQVlKLE9BQU9LLGFBQWFELElBQ3BDUCxLQUFLLFdBR0pTLEVBQ0pDLGNBQ0VDLEtBQUtDLFNBQVcsUUFDaEJELEtBQUtFLE9BQVNGLEtBRWRBLEtBQUtHLEtBQU8sSUFDVkgsS0FBSzdCLE9BQVNBLEVBQU9DLEdBQ3JCNEIsS0FBS1YsU0FBV0EsRUFBU2xCLEdBRXpCLElBQUlnQyxFQUFVQyxTQUFTQyxpQkFBaUIsS0FDeEMsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlILEVBQVFJLE9BQVFELElBQUssQ0FDdkMsSUFBSUUsRUFBU0wsRUFBUUcsR0FDckIsSUFBSUcsRUFBT0QsRUFBT0UsYUFBYSxRQUMvQixHQUFJRCxFQUFLRSxRQUFRLFlBQWMsR0FHL0IsR0FBSUYsRUFBS0UsUUFBUSxjQUFnQixFQUFHLENBQ2xDSCxFQUFPSSxhQUFhLHNCQUF1QkgsRUFBS0ksUUFBUSxXQUFZLEtBQ3BFTCxFQUFPQyxLQUFPLFNBR2RWLEtBQUtlLFFBQVFOLEdBRWZBLEVBQU9PLGlCQUFpQixRQUFTLElBQy9CQyxFQUFFQyxpQkFDRixJQUFJQyxFQUFTRixFQUFFRSxPQUNmbkIsS0FBS0UsT0FBT2tCLFNBQVNELE9BSzNCbkIsS0FBS3FCLE9BQVMsSUFDWkMsRUFBaUJBLEVBQWVSLFFBQVEsVUFBVyxJQUNuRCxPQUFPZCxLQUFLN0IsT0FBT21ELElBR3JCdEIsS0FBS3VCLE9BQVMsSUFDWixPQUFPdkIsS0FBS1YsU0FBU2tDLElBR3ZCeEIsS0FBS2UsUUFBVSxJQUNiLElBQUlVLEVBQU1DLEVBQVFmLGFBQWEsUUFDL0JjLEVBQU1BLEVBQUlYLFFBQVEsVUFBVyxJQUM3QlksRUFBUWIsYUFBYSxzQkFBdUJiLEtBQUtxQixPQUFPSSxJQUN4REMsRUFBUWIsYUFBYSxPQUFRLE1BRy9CYixLQUFLb0IsU0FBVyxJQUNkLEdBQUlNLEVBQVFDLGFBQWEsdUJBQXdCLENBQy9DLElBQUlDLEVBQVMsVUFBWTVCLEtBQUt1QixPQUFPRyxFQUFRZixhQUFhLHdCQUcxRCxJQUFJa0IsRUFBTXhCLFNBQVN5QixjQUFjLEtBQ2pDRCxFQUFJRSxNQUFNQyxXQUFhLFNBQ3ZCSCxFQUFJRSxNQUFNRSxTQUFXLFdBQ3JCSixFQUFJbkIsS0FBT2tCLEVBQ1h2QixTQUFTNkIsS0FBS0MsWUFBWU4sR0FDMUJBLEVBQUlPLFFBQ0ovQixTQUFTNkIsS0FBS0csWUFBWVIsTUFLbEMsTUFBTVMsRUFBUSxJQUFJeEMsRUFDbEIsT0FBT3dDLEVBaEdNQyxHQUNTLG1CQUFYQyxRQUF5QkEsT0FBT0MsSUFDekNELE9BQU8sV0FBYyxPQUFPdkUsRUFBS0MsS0FDTCxpQkFBWndFLFVBQ2hCQyxPQUFPRCxRQUFVekUsRUFBS0MsSUFOeEIsQ0FRb0IsaUJBQVgwRSxRQUF1QkEsUUFBVzVDLEtBMkYxQyJ9
